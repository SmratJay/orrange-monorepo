# =============================================================================
# ORRANGE P2P - Environment Configuration
# =============================================================================

# Application
NODE_ENV=development
PORT=3001
HOST=0.0.0.0

# Frontend URLs (comma separated)
FRONTEND_URLS=http://localhost:3000,http://localhost:3001

# Database
DATABASE_URL="postgresql://postgres:password@localhost:5432/orrange_dev"
DATABASE_URL_TEST="postgresql://postgres:password@localhost:5432/orrange_test"

# Redis
REDIS_URL="redis://localhost:6379"
REDIS_PASSWORD=""

# JWT Authentication
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production"
JWT_REFRESH_SECRET="your-super-secret-refresh-key-change-this-in-production"
JWT_ISSUER="orrange.io"
JWT_ACCESS_EXPIRY="15m"
JWT_REFRESH_EXPIRY="7d"

# Wallet Authentication
SIWE_DOMAIN="localhost"
WALLET_CONNECT_PROJECT_ID="your-wallet-connect-project-id"

# Blockchain RPC URLs
ETHEREUM_RPC_URL="https://eth-mainnet.g.alchemy.com/v2/your-api-key"
POLYGON_RPC_URL="https://polygon-mainnet.g.alchemy.com/v2/your-api-key"
BSC_RPC_URL="https://bsc-dataseed.binance.org/"
AVALANCHE_RPC_URL="https://api.avax.network/ext/bc/C/rpc"
BITCOIN_RPC_URL="https://blockstream.info/api"

# API Keys
ALCHEMY_API_KEY="your-alchemy-api-key"
INFURA_API_KEY="your-infura-api-key"
MORALIS_API_KEY="your-moralis-api-key"

# Email Service (using Nodemailer)
SMTP_HOST="smtp.gmail.com"
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER="your-email@gmail.com"
SMTP_PASS="your-app-specific-password"
FROM_EMAIL="noreply@orrange.io"
FROM_NAME="Orrange P2P"

# SMS Service (using Twilio)
TWILIO_ACCOUNT_SID="your-twilio-account-sid"
TWILIO_AUTH_TOKEN="your-twilio-auth-token"
TWILIO_PHONE_NUMBER="+1234567890"

# File Upload
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES="image/jpeg,image/png,image/gif,application/pdf"
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_REGION="us-east-1"
AWS_BUCKET_NAME="orrange-uploads"

# Rate Limiting
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL=false

# Security
BCRYPT_SALT_ROUNDS=12
SESSION_SECRET="your-session-secret-key"
CORS_ORIGIN="http://localhost:3000"

# Monitoring & Logging
LOG_LEVEL="info"
SENTRY_DSN="your-sentry-dsn"
PROMETHEUS_PORT=9090

# External APIs
COINGECKO_API_KEY="your-coingecko-api-key"
COINMARKETCAP_API_KEY="your-coinmarketcap-api-key"
EXCHANGERATES_API_KEY="your-exchangerates-api-key"

# KYC Service (example: using Jumio)
KYC_PROVIDER="jumio"
JUMIO_API_TOKEN="your-jumio-api-token"
JUMIO_API_SECRET="your-jumio-api-secret"
JUMIO_BASE_URL="https://netverify.com"

# Push Notifications
FCM_SERVER_KEY="your-firebase-server-key"
APPLE_KEY_ID="your-apple-key-id"
APPLE_TEAM_ID="your-apple-team-id"

# Analytics
GOOGLE_ANALYTICS_ID="GA-XXXXXXXXX"
MIXPANEL_TOKEN="your-mixpanel-token"

# Feature Flags
ENABLE_KYC=true
ENABLE_2FA=true
ENABLE_DISPUTES=true
ENABLE_ANALYTICS=true
ENABLE_MOBILE_APP=false

# Development
ENABLE_SWAGGER=true
ENABLE_BULL_BOARD=true
ENABLE_DEBUG=true

# Testing
TEST_WALLET_PRIVATE_KEY="your-test-wallet-private-key"
TEST_WALLET_ADDRESS="your-test-wallet-address"

# =============================================================================
# IMPORTANT SECURITY NOTES:
# 
# 1. Change all default secrets and API keys for production
# 2. Use strong, unique passwords for database and services
# 3. Enable SSL/TLS in production (set NODE_ENV=production)
# 4. Use environment-specific files (.env.local, .env.production)
# 5. Never commit sensitive credentials to version control
# 6. Use secret management services in production (AWS Secrets Manager, etc.)
# =============================================================================
